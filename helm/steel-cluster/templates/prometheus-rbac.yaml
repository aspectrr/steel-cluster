{{- /*
Prometheus RBAC resources:
- ServiceAccount (namespaced) if prometheus.serviceAccount.create
- ClusterRole (cluster-scoped) if prometheus.rbac.create
- ClusterRoleBinding (cluster-scoped) if prometheus.rbac.create
All gated behind prometheus.enabled
*/ -}}
{{- $ns := include "steel-cluster.namespace" . -}}
{{- $saName := include "steel-cluster.prometheus.serviceAccountName" . -}}
{{- $roleName := ( .Values.prometheus.name | default "prometheus" ) -}}

{{- if and .Values.prometheus.enabled .Values.prometheus.serviceAccount.create }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ $saName }}
  namespace: {{ $ns }}
  labels:
{{ include "steel-cluster.labels" . | nindent 4 }}
{{- with .Values.prometheus.serviceAccount.annotations }}
  annotations:
{{ toYaml . | nindent 4 }}
{{- end }}
{{- end }}

{{- if and .Values.prometheus.enabled .Values.prometheus.rbac.create }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ $roleName }}
  labels:
{{ include "steel-cluster.labels" . | nindent 4 }}
rules:
  - apiGroups: [""]
    resources:
      - nodes
      - nodes/proxy
      - services
      - endpoints
      - pods
    verbs: ["get", "list", "watch"]
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ $roleName }}
  labels:
{{ include "steel-cluster.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ $roleName }}
subjects:
  - kind: ServiceAccount
    name: {{ $saName }}
    namespace: {{ $ns }}
{{- end }}
