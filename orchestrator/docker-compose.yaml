services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  orchestrator:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - K8S_NAMESPACE=default
      - BROWSER_API_IMAGE=steel-dev/steel-browser-api:latest
      - BROWSER_UI_IMAGE=steel-dev/steel-browser-ui:latest
      - BROWSER_API_PORT=3000
      - BROWSER_UI_PORT=5173
      - JOB_TTL_SECONDS=3600
      - POD_MEMORY_REQUEST=512Mi
      - POD_CPU_REQUEST=200m
      - POD_MEMORY_LIMIT=2Gi
      - POD_CPU_LIMIT=1000m
      - SESSION_TIMEOUT=1800
      - MAX_SESSIONS=50
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ~/.kube:/home/orchestrator/.kube:ro
    healthcheck:
      test:
        [
          "CMD",
          "node",
          "-e",
          "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) }).on('error', () => process.exit(1))",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    restart: unless-stopped

volumes:
  redis_data:
    driver: local

networks:
  default:
    driver: bridge
